<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Instance.
 * Generated by PHPUnit on 2009-06-03 at 01:57:44.
 */
class InstanceTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var	Instance
	 * @access protected
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	protected function setUp() {
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	protected function tearDown() {
	}
	
	public function testCollisionDetection() {
		$this->setExpectedException('InstanceException', 'Primary key collision! The specified key has already been initialized.');
		$identifier = array(1);
		$className = 'DummyClass';
		$instance1 = new Instance($className);
		$instance1->id = 1;
		$instance2 = new Instance($className);
		$instance2->id = 2;
		$instance1->updateIdentifier($identifier);
		$instance2->updateIdentifier($identifier);
	}
	
	public function testIdentifierUpdate1() {
		$identifier = array(2);
		$className = 'DummyClass';
		$instance1 = new Instance($className);
		$instance1->id = 'id';
		$instance1->updateIdentifier($identifier);
		$instance2 = new Instance($className, $identifier);
		$this->assertEquals('id', $instance2->id);
	}
	
	public function testIdentifierUpdate2() {
		$identifier = array(3);
		$className = 'DummyClass';
		$instance1 = new Instance($className);
		$instance1->id = 'id';
		$instance1->updateIdentifier($identifier);
		$instance2 = new Instance($className, $identifier);
		$instance1->id = 'id2';
		$this->assertEquals('id2', $instance2->id);
		$instance2->id = 'id3';
		$this->assertEquals('id3', $instance1->id);
		$identifier = array(4);
		$instance1->updateIdentifier($identifier);
		$this->assertEquals('id3', $instance1->id);
		$this->assertEquals('id3', $instance2->id);
		$instance2->id = 'id4';
		$this->assertEquals('id4', $instance1->id);
	}
}
?>
